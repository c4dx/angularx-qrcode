{"version":3,"file":"angularx-qrcode.mjs","sources":["../../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts"],"sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild,\r\n} from \"@angular/core\"\r\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\"\r\n// @ts-ignore\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\nimport * as QRCode from \"@cordobo/qrcode\"\r\nimport {\r\n  QRCodeErrorCorrectionLevel,\r\n  QRCodeVersion,\r\n  QRCodeElementType,\r\n  QRCodeConfigType,\r\n} from \"./types\"\r\n\r\n@Component({\r\n  selector: \"qrcode\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\r\n})\r\nexport class QRCodeComponent implements OnChanges {\r\n  @Input() public allowEmptyString = false\r\n  @Input() public colorDark = \"#000000ff\"\r\n  @Input() public colorLight = \"#ffffffff\"\r\n  @Input() public cssClass = \"qrcode\"\r\n  @Input() public elementType: QRCodeElementType = \"canvas\"\r\n  @Input()\r\n  public errorCorrectionLevel: QRCodeErrorCorrectionLevel = \"M\"\r\n  @Input() public imageSrc?: string\r\n  @Input() public imageHeight?: number\r\n  @Input() public imageWidth?: number\r\n  @Input() public margin = 4\r\n  @Input() public qrdata = \"\"\r\n  @Input() public scale = 4\r\n  @Input() public version?: QRCodeVersion\r\n  @Input() public width = 10\r\n\r\n  // Accessibility features introduced in 13.0.4+\r\n  @Input() public alt?: string\r\n  @Input() public ariaLabel?: string\r\n  @Input() public title?: string\r\n\r\n  @Output() qrCodeURL = new EventEmitter<SafeUrl>()\r\n\r\n  @ViewChild(\"qrcElement\", { static: true }) public qrcElement!: ElementRef\r\n\r\n  public context: CanvasRenderingContext2D | null = null\r\n  private centerImage?: HTMLImageElement\r\n\r\n  constructor(private renderer: Renderer2, private sanitizer: DomSanitizer) {}\r\n\r\n  public async ngOnChanges(): Promise<void> {\r\n    await this.createQRCode()\r\n  }\r\n\r\n  protected isValidQrCodeText(data: string | null): boolean {\r\n    if (this.allowEmptyString === false) {\r\n      return !(\r\n        typeof data === \"undefined\" ||\r\n        data === \"\" ||\r\n        data === \"null\" ||\r\n        data === null\r\n      )\r\n    }\r\n    return !(typeof data === \"undefined\")\r\n  }\r\n\r\n  private toDataURL(qrCodeConfig: QRCodeConfigType): Promise<any> {\r\n    return new Promise(\r\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\r\n        QRCode.toDataURL(\r\n          this.qrdata,\r\n          qrCodeConfig,\r\n          (err: Error, url: string) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              resolve(url)\r\n            }\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  private toCanvas(\r\n    canvas: Element,\r\n    qrCodeConfig: QRCodeConfigType\r\n  ): Promise<any> {\r\n    return new Promise(\r\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\r\n        QRCode.toCanvas(canvas, this.qrdata, qrCodeConfig, (error: Error) => {\r\n          if (error) {\r\n            reject(error)\r\n          } else {\r\n            resolve(\"success\")\r\n          }\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  private toSVG(qrCodeConfig: QRCodeConfigType): Promise<any> {\r\n    return new Promise(\r\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\r\n        QRCode.toString(\r\n          this.qrdata,\r\n          qrCodeConfig,\r\n          (err: Error, url: string) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              resolve(url)\r\n            }\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  private renderElement(element: Element): void {\r\n    for (const node of this.qrcElement.nativeElement.childNodes) {\r\n      this.renderer.removeChild(this.qrcElement.nativeElement, node)\r\n    }\r\n    this.renderer.appendChild(this.qrcElement.nativeElement, element)\r\n  }\r\n\r\n  private async createQRCode(): Promise<void> {\r\n    // Set sensitive defaults\r\n    if (this.version && this.version > 40) {\r\n      console.warn(\"[angularx-qrcode] max value for `version` is 40\")\r\n      this.version = 40\r\n    } else if (this.version && this.version < 1) {\r\n      console.warn(\"[angularx-qrcode]`min value for `version` is 1\")\r\n      this.version = 1\r\n    } else if (this.version !== undefined && isNaN(this.version)) {\r\n      console.warn(\r\n        \"[angularx-qrcode] version should be a number, defaulting to auto.\"\r\n      )\r\n      this.version = undefined\r\n    }\r\n\r\n    try {\r\n      if (!this.isValidQrCodeText(this.qrdata)) {\r\n        throw new Error(\r\n          \"[angularx-qrcode] Field `qrdata` is empty, set 'allowEmptyString=\\\"true\\\"' to overwrite this behaviour.\"\r\n        )\r\n      }\r\n\r\n      // This is a workaround to allow an empty string as qrdata\r\n      if (this.isValidQrCodeText(this.qrdata) && this.qrdata === \"\") {\r\n        this.qrdata = \" \"\r\n      }\r\n\r\n      const config: QRCodeConfigType = {\r\n        color: {\r\n          dark: this.colorDark,\r\n          light: this.colorLight,\r\n        },\r\n        errorCorrectionLevel: this.errorCorrectionLevel,\r\n        margin: this.margin,\r\n        scale: this.scale,\r\n        type: this.elementType,\r\n        version: this.version,\r\n        width: this.width,\r\n      }\r\n\r\n      const centerImageSrc = this.imageSrc\r\n      const centerImageHeight = this.imageHeight || 40\r\n      const centerImageWidth = this.imageWidth || 40\r\n\r\n      switch (this.elementType) {\r\n        case \"canvas\":\r\n          const canvasElement: HTMLCanvasElement =\r\n            this.renderer.createElement(\"canvas\")\r\n          this.context = canvasElement.getContext(\"2d\")\r\n          this.toCanvas(canvasElement, config)\r\n            .then(() => {\r\n              if (this.ariaLabel) {\r\n                this.renderer.setAttribute(\r\n                  canvasElement,\r\n                  \"aria-label\",\r\n                  `${this.ariaLabel}`\r\n                )\r\n              }\r\n              if (this.title) {\r\n                this.renderer.setAttribute(\r\n                  canvasElement,\r\n                  \"title\",\r\n                  `${this.title}`\r\n                )\r\n              }\r\n\r\n              if (centerImageSrc && this.context) {\r\n                this.centerImage = new Image(\r\n                  centerImageWidth,\r\n                  centerImageHeight\r\n                )\r\n\r\n                if (centerImageSrc !== this.centerImage.src) {\r\n                  this.centerImage.src = centerImageSrc\r\n                }\r\n\r\n                if (centerImageHeight !== this.centerImage.height) {\r\n                  this.centerImage.height = centerImageHeight\r\n                }\r\n\r\n                if (centerImageWidth !== this.centerImage.width) {\r\n                  this.centerImage.width = centerImageWidth\r\n                }\r\n\r\n                const centerImage = this.centerImage\r\n\r\n                if (centerImage) {\r\n                  centerImage.onload = () => {\r\n                    this.context?.drawImage(\r\n                      centerImage,\r\n                      canvasElement.width / 2 - centerImageWidth / 2,\r\n                      canvasElement.height / 2 - centerImageHeight / 2,\r\n                      centerImageWidth,\r\n                      centerImageHeight\r\n                    )\r\n                  }\r\n                }\r\n              }\r\n\r\n              this.renderElement(canvasElement)\r\n              this.emitQRCodeURL(canvasElement as HTMLCanvasElement)\r\n            })\r\n            .catch((e) => {\r\n              console.error(\"[angularx-qrcode] canvas error:\", e)\r\n            })\r\n          break\r\n        case \"svg\":\r\n          const svgParentElement: HTMLElement =\r\n            this.renderer.createElement(\"div\")\r\n          this.toSVG(config)\r\n            .then((svgString: string) => {\r\n              this.renderer.setProperty(\r\n                svgParentElement,\r\n                \"innerHTML\",\r\n                svgString\r\n              )\r\n              const svgElement = svgParentElement.firstChild as SVGSVGElement\r\n              this.renderer.setAttribute(svgElement, \"height\", `${this.width}`)\r\n              this.renderer.setAttribute(svgElement, \"width\", `${this.width}`)\r\n              this.renderElement(svgElement)\r\n              this.emitQRCodeURL(svgElement)\r\n            })\r\n            .catch((e) => {\r\n              console.error(\"[angularx-qrcode] svg error:\", e)\r\n            })\r\n          break\r\n        case \"url\":\r\n        case \"img\":\r\n        default:\r\n          const imgElement: HTMLImageElement =\r\n            this.renderer.createElement(\"img\")\r\n          this.toDataURL(config)\r\n            .then((dataUrl: string) => {\r\n              if (this.alt) {\r\n                imgElement.setAttribute(\"alt\", this.alt)\r\n              }\r\n              if (this.ariaLabel) {\r\n                imgElement.setAttribute(\"aria-label\", this.ariaLabel)\r\n              }\r\n              imgElement.setAttribute(\"src\", dataUrl)\r\n              if (this.title) {\r\n                imgElement.setAttribute(\"title\", this.title)\r\n              }\r\n              this.renderElement(imgElement)\r\n              this.emitQRCodeURL(imgElement)\r\n            })\r\n            .catch((e) => {\r\n              console.error(\"[angularx-qrcode] img/url error:\", e)\r\n            })\r\n      }\r\n    } catch (e: any) {\r\n      console.error(\"[angularx-qrcode] Error generating QR Code:\", e.message)\r\n    }\r\n  }\r\n\r\n  emitQRCodeURL(element: HTMLCanvasElement | HTMLImageElement | SVGSVGElement) {\r\n    const className = element.constructor.name\r\n    if (className === SVGSVGElement.name) {\r\n      const svgHTML = element.outerHTML\r\n      const blob = new Blob([svgHTML], { type: \"image/svg+xml\" })\r\n      const urlSvg = URL.createObjectURL(blob)\r\n      const urlSanitized = this.sanitizer.bypassSecurityTrustUrl(urlSvg)\r\n      this.qrCodeURL.emit(urlSanitized)\r\n      return\r\n    }\r\n\r\n    let urlImage = \"\"\r\n\r\n    if (className === HTMLCanvasElement.name) {\r\n      urlImage = (element as HTMLCanvasElement).toDataURL(\"image/png\")\r\n    }\r\n\r\n    if (className === HTMLImageElement.name) {\r\n      urlImage = (element as HTMLImageElement).src\r\n    }\r\n\r\n    fetch(urlImage)\r\n      .then((urlResponse: Response) => urlResponse.blob())\r\n      .then((blob: Blob) => URL.createObjectURL(blob))\r\n      .then((url: string) => this.sanitizer.bypassSecurityTrustUrl(url))\r\n      .then((urlSanitized: SafeUrl) => {\r\n        this.qrCodeURL.emit(urlSanitized)\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"[angularx-qrcode] Error when fetching image/png URL: \" + error\r\n        )\r\n      })\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\"\r\nimport { QRCodeComponent } from \"./angularx-qrcode.component\"\r\n\r\n@NgModule({\r\n  providers: [],\r\n  declarations: [QRCodeComponent],\r\n  exports: [QRCodeComponent],\r\n})\r\nexport class QRCodeModule {}\r\n"],"names":[],"mappings":"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"}